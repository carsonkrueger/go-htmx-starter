package page_layouts

import (
	gctx "context"

	"github.com/carsonkrueger/main/context"
	"github.com/carsonkrueger/main/templates/partials/nav"
	"github.com/carsonkrueger/main/templates/partials"
	"github.com/carsonkrueger/main/templates/datadisplay"
	"github.com/carsonkrueger/main/templui/icon"
	"github.com/carsonkrueger/main/templates/partials/footer"
	"github.com/carsonkrueger/main/templates/constants"
)


func navItems(ctx gctx.Context) nav.NavItemBody {
	userHxGet := "/signup"
	if context.GetUserId(ctx) != 0 {
		userHxGet = "/login"
	}

	return nav.NavItemBody{
		Left: templ.Join(
			templ.Raw("<img class='cursor-pointer' hx-get='/home' hx-push-url='true' hx-target='#"+constants.MainContentID+"' width='40' height='40' src='/public/tree_icon_white.svg'/>"),
			datadisplay.ResponsiveShow(datadisplay.MD, partials.ThePeptidePlaceText(0.7, false)),
			datadisplay.ResponsiveHide(datadisplay.MD, nav.NavItem("catalog-nav-item", "CATALOG", "/catalog")),
			datadisplay.ResponsiveHide(datadisplay.MD, nav.NavItem("contact-nav-item", "CONTACT", "/contact")),
		),
		Middle: datadisplay.ResponsiveShow(datadisplay.MD, templ.Join(
			datadisplay.ResponsiveShow(datadisplay.LG, nav.NavItem("home-nav-item", "HOME", "/home")),
			nav.NavItem("catalog-nav-item", "CATALOG", "/catalog"),
			nav.NavItem("contact-nav-item", "CONTACT", "/contact"),
		)),
		Right: templ.Join(
			datadisplay.Clickable(nil, icon.Search(icon.Props{ Size:18 })),
			datadisplay.Clickable(
				templ.Attributes {
	    			"hx-get": userHxGet,
	    			"hx-push-url": "true",
	    			"hx-target": "#"+constants.MainContentID,
	    		},
				icon.CircleUser(icon.Props{ Size:18 }),
			),
			cartItem(),
		),
	}
}

templ cartItem() {
	@nav.NavItem("cart-nav-item", "", "/cart") {
	    @datadisplay.Clickable(nil, icon.ShoppingCart(icon.Props{ Size:18 }))
	}
}

templ MainPageLayout(main templ.Component) {
	{{
		items := navItems(ctx)
	}}
	@BasePageLayout() {
		<div class="min-h-screen flex flex-col bg-primary text-main">
			<header class="bg-secondary text-white lg:p-4 p-6 sticky top-0 z-10">
				@nav.Nav("nav", &items)
			</header>
			@MainContent() {
				@main
			}
			@footer.Footer()
		</div>
	}
}
