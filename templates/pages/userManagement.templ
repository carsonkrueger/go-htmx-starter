package pages

import (
	"strconv"

	"github.com/carsonkrueger/main/models"
	"github.com/carsonkrueger/main/models/authModels"
	"github.com/carsonkrueger/main/templates/datadisplay"
)

templ UserManagement() {
	<div>
		User Management
	</div>
}

templ UserManagementUsers(users []authModels.UserPrivilegeLevelJoin) {
	{{
		headers := []datadisplay.CellData{
			{
				ID:    "h-name",
				Width: 1,
				Body:  datadisplay.Text("Name", models.LG),
			},
			{
				ID:    "h-pr",
				Width: 1,
				Body:  datadisplay.Text("Privilege Level", models.LG),
			},
			{
				ID:    "h-ca",
				Width: 1,
				Body:  datadisplay.Text("Created At", models.LG),
			},
		}

		cells := make([][]datadisplay.CellData, len(users))
		for i, user := range users {
			cells[i] = []datadisplay.CellData{
				{
					ID:    "n-" + strconv.Itoa(i),
					Width: 1,
					Body:  datadisplay.Text(user.FirstName, models.MD),
				},
				{
					ID:    "pr-" + strconv.Itoa(i),
					Width: 1,
					Body:  datadisplay.Text(strconv.FormatInt(user.PrivilegeLevelID, 10), models.MD),
				},
				{
					ID:    "ca-" + strconv.Itoa(i),
					Width: 1,
					Body:  datadisplay.Text(user.CreatedAt.Format("2006-01-02"), models.MD),
				},
			}
		}
	}}
	@datadisplay.BasicTable(headers, cells)
}

templ UserManagementLevels(privileges []authModels.JoinedPrivilegesRaw) {
	{{
		headers := []datadisplay.CellData{
			{
				ID:    "h-lvl-name",
				Width: 1,
				Body:  datadisplay.Text("Privilege Level", models.LG),
			},
			{
				ID:    "h-pr",
				Width: 1,
				Body:  datadisplay.Text("Privilege", models.LG),
			},
			{
				ID:    "h-ca",
				Width: 1,
				Body:  datadisplay.Text("Created At", models.LG),
			},
		}

		cells := make([][]datadisplay.CellData, len(privileges))
		for i, p := range privileges {
			ca := p.Privileges.CreatedAt
			caStr := "No Created At"
			if ca != nil {
				caStr = ca.String()
			}
			cells[i] = []datadisplay.CellData{
				{
					ID:    "lvl-" + strconv.Itoa(i),
					Width: 1,
					Body:  datadisplay.Text(p.LevelName, models.SM),
				},
				{
					ID:    "pr-" + strconv.Itoa(i),
					Width: 1,
					Body:  datadisplay.Text(p.Privileges.Name, models.SM),
				},
				{
					ID:    "ca-" + strconv.Itoa(i),
					Width: 1,
					Body:  datadisplay.Text(caStr, models.MD),
				},
			}
		}
	}}
	<div class="flex flex-col grow justify-between">
		@datadisplay.BasicTable(headers, cells)
		<div>
			<div
				hx-get="/privilege-levels/select"
				hx-target="this"
				hx-swap="outerHTML"
				hx-trigger="load"
			/>
			<div
				hx-get="/privileges/select"
				hx-target="this"
				hx-swap="outerHTML"
				hx-trigger="load"
			/>
		</div>
	</div>
}
