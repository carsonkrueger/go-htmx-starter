package input

import (
	"github.com/carsonkrueger/main/pkg/templui/input"
	"github.com/carsonkrueger/main/pkg/templui/label"
	"github.com/carsonkrueger/main/pkg/templui/utils"
)

var (
	lightInput = "bg-tertiary rounded-xs"
	darkInput = "bg-quaternary rounded-xs"
	lightLabel = "text-tertiary"
	darkLabel = "text-quaternary"
)

type Variant int
const (
	Light Variant = iota
	Dark
)

type Props struct {
	LabelProps label.Props
	InputProps input.Props
	Label string
	Variant Variant
}

templ InputWithLabel(props ...Props) {
	{{
		var p Props
		if len(props) > 0 {
			p = props[0]
		}
		switch p.Variant {
		case Light:
			p.LabelProps.Class = utils.TwMerge(lightLabel, p.LabelProps.Class)
			p.InputProps.Class = utils.TwMerge(lightInput, p.InputProps.Class)
		case Dark:
			p.LabelProps.Class = utils.TwMerge(darkLabel, p.LabelProps.Class)
			p.InputProps.Class = utils.TwMerge(darkInput, p.InputProps.Class)
		}
	}}
	<div
		class="w-full grid gap-2"
	>
		@label.Label(p.LabelProps) {
			{ p.Label }
		}
		@input.Input(p.InputProps) {
			{ children... }
		}
	</div>
}
